name: Build & Deploy

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        type: choice
        options:
          - staging
          - production

jobs:
  build:
    name: Build Production Assets
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP 8.3
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, xml, curl
          tools: composer:v2

      - name: Setup Node.js 20
        uses: actions/setup-node@v6
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Composer dependencies (production)
        run: composer install --prefer-dist --no-dev --optimize-autoloader --no-interaction

      - name: Install npm dependencies
        run: npm ci

      - name: Build frontend assets
        run: npm run build
        env:
          NODE_ENV: production

      - name: Create deployment artifact
        run: |
          mkdir -p artifacts
          tar -czf artifacts/corpvitals24-${GITHUB_SHA}.tar.gz \
            --exclude='.git' \
            --exclude='node_modules' \
            --exclude='tests' \
            --exclude='.github' \
            --exclude='storage/logs/*' \
            --exclude='storage/framework/cache/*' \
            --exclude='storage/framework/sessions/*' \
            --exclude='storage/framework/views/*' \
            .

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: corpvitals24-build
          path: artifacts/corpvitals24-${{ github.sha }}.tar.gz
          retention-days: 30

      - name: Create release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/corpvitals24-${{ github.sha }}.tar.gz
          draft: false
          prerelease: false
          body: |
            ## CorpVitals24 Release ${{ github.ref_name }}
            
            ### Changes
            See [CHANGELOG.md](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md)
            
            ### Deployment Instructions
            1. Extract artifact on server
            2. Run migrations: `php artisan migrate --force`
            3. Clear caches: `php artisan optimize:clear`
            4. Rebuild caches: `php artisan optimize`
            5. Restart queue workers
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Optional: Deploy to staging
  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: build
    if: github.event.inputs.environment == 'staging'
    environment:
      name: staging
      url: https://staging.corpvitals24.test
    
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: corpvitals24-build

      - name: Deploy to staging server
        run: |
          echo "üöÄ Deploying to staging..."
          echo "üì¶ Artifact downloaded"
          # Add your deployment commands here
          # Example: scp, rsync, or deployment service
          
      - name: Run post-deployment tasks
        run: |
          echo "üîÑ Running migrations..."
          echo "üóëÔ∏è  Clearing caches..."
          echo "‚ôªÔ∏è  Restarting services..."
          echo "‚úÖ Staging deployment complete!"

  # Optional: Deploy to production
  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: build
    if: github.event.inputs.environment == 'production' || startsWith(github.ref, 'refs/tags/')
    environment:
      name: production
      url: https://corpvitals24.test
    
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: corpvitals24-build

      - name: Deploy to production server
        run: |
          echo "üöÄ Deploying to production..."
          echo "üì¶ Artifact downloaded"
          # Add your deployment commands here
          
      - name: Run post-deployment tasks
        run: |
          echo "üîÑ Running migrations..."
          echo "üóëÔ∏è  Clearing caches..."
          echo "‚ôªÔ∏è  Restarting services..."
          echo "‚úÖ Production deployment complete!"

      - name: Notify deployment success
        run: |
          echo "üéâ Production deployment successful!"
          echo "üåê URL: https://corpvitals24.test"
          echo "üìù Version: ${{ github.ref_name || github.sha }}"

